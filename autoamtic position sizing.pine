//@version=5
strategy("Dynamic Position Sizing & RR", overlay=true)

// Input settings
account_balance = input.float(100, "Account Balance ($)", step=0.1)
risk_percent = input(5, "Risk per Trade (%)")
rr_ratio = input.float(2.0, "Risk-Reward Ratio", step=0.1)
min_sl_percent = input(0.5, "Minimum SL (%)")
atr_multiplier = input.float(1.0, "ATR Multiplier for SL", step=0.1)

sl_line = input.price(50, "Pair Current Price", confirm=true)
sl_distance_percent = math.abs(((close - sl_line) / close)) * 100  // Calculates SL percentage by the line relative to candle close price

// Added checkboxes for enabling/disabling SL/TP for long and short positions
use_long_sl_tp = input.bool(true, "Use Long SL/TP", group="Style")
use_short_sl_tp = input.bool(true, "Use Short SL/TP", group="Style")

showscr = input(true, "Show Position Size Label")
color col = input.color(color.white, title="Text Color")
posscrX = input(30, "Position Size Label x-axis")

// ATR-based Stop Loss
atr_value = ta.atr(14)
sl_percent = math.round(math.max((atr_value / close) * 100, min_sl_percent),3)

// Risk per trade calculation
risk_amount = (account_balance * risk_percent) / 100
position_size = math.round((risk_amount / (sl_percent / 100)))
position_size_line = math.round((risk_amount / (sl_distance_percent / 100))) 

// Entry, SL, and TP Levels
long_entry = ta.crossover(ta.sma(close, 14), ta.sma(close, 50))
short_entry = ta.crossunder(ta.sma(close, 14), ta.sma(close, 50))
sl_level_long = close * (1 - sl_percent / 100)
tp_level_long = close + ((close - sl_level_long) * rr_ratio)
sl_level_short = close * (1 + sl_percent / 100)
tp_level_short = close - ((sl_level_short - close) * rr_ratio)


// Plot SL & TP levels - modified to show only when enabled
plot(use_long_sl_tp ? sl_level_long : na, title="Long SL", color=color.red, linewidth=2)
plot(use_long_sl_tp ? tp_level_long : na, title="Long TP", color=color.green, linewidth=2)
plot(use_short_sl_tp ? sl_level_short : na, title="Short SL", color=color.red, linewidth=2)
plot(use_short_sl_tp ? tp_level_short : na, title="Short TP", color=color.green, linewidth=2)

f_color (_val ) => 
     _val  ? #00000000 : na

f_print (_txt ) => 
     var _lbl  = label(na), 
     label.delete(_lbl ), 
     _lbl  := label.new(
     time + (time-time[1])*posscrX , 
     ohlc4[1], 
     _txt ,
     xloc.bar_time, 
     yloc.price, 
     f_color (  showscr ),
     textcolor =  showscr ? col : na, 
     style=label.style_label_left,
     size=size.normal,
     textalign = text.align_left  // Ensures text is aligned to the left
     )

f_print ( 
     " Account Balance:       "           + str.tostring(account_balance) + 
     "\n Risk Per Trade:           "      + str.tostring(risk_percent) + "%" + " ($" + str.tostring(risk_amount) +  ")" + 
     "\n SL Percentage:           "       + str.tostring(math.round(sl_distance_percent, 3)) + "%" +
     "\n Position Size:             "     + str.tostring(position_size_line) +
     "\n Potential Profit:        "      + "‚úÖ +$" + str.tostring(risk_amount * rr_ratio) +
     "\n Potential Loss:          "      + "‚ùå -$" + str.tostring(risk_amount) +
     "\n R/R:                          "  + str.tostring(rr_ratio,"#.##") + " R" +
     "\nüìå INSTRUCTIONS: Drag the SL line below the last candle close to set the script-determined stop-loss." +
     "\n‚ÑπÔ∏è HOW IT WORKS: The script calculates SL from the last candle close (top if bullish, bottom if bearish) to the SL line." +
     (position_size_line > account_balance ? "\n‚ö†Ô∏è Needs a leverage of at least " + str.tostring(math.round(position_size_line / account_balance, 2)) + "x" : "")
)
